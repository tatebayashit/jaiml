JAIMLコーパス構築：プロトコル草案
【1. アノテーション設計】
• 注釈基準（annotation guideline）の文書化：
  - 各カテゴリ定義（社会的／回避的／機械的／自己）を明示
  - 境界判断の優先順位（主観的 vs 構文的 vs 意図的特徴など）
  - ソフトスコア付与の基準（5段階等）
  - 例文と分類根拠を注釈者に開示（教師バイアス抑制型）
【2. 作業者のトレーニング】
• チュートリアル＋クイズ形式での事前評価
• 高一致率の作業者のみ通過（例：正答率85%以上）
【3. アノテーション本体】
• Airtable／Google Sheets／独自ツールなど
• 各応答に対して4軸スコア（例：0〜2）を付与
• 重複アノテーション（最低2名）＋一致率の記録
【4. 品質管理と不正対策】
• 高速・低変動者の検出
• LLMによる「AI臭スコア」事後評価
• ゴールドスタンダード項目の混入
【5. コーパス統合】
• jsonl形式で統一、メタ情報付与
【6. モデル学習用前処理】
• soft-label化、ベクトル事前計算、stratified split
【7. ソースコード反映】
• features.json更新、モデル再学習
【8. 実験再現性の保証】
• GitHub構造、README、ライセンス宣言整備


倫理審査セルフチェック文書（案）
重大リスクと緩和策：
1. クラウドワーカーの心理的負荷：
   - 事前に「選抜試験で落選する可能性がある」ことを説明
   - 不合格者には心理的配慮を含んだ通知テンプレートを用意
2. 個人情報：
   - コーパスは非公開データを含まないようフィルタリング
   - ユーザー生成発話は匿名化済みテンプレートを用いる
3. AI応答によるセンシティブ情報の混入：
   - ゴールドスタンダードによるレビュー
   - 評価時の自動フィルター（NGワード）設定


「user発話」「AI応答」ペア生成手順書（案）
1. 発話生成ルール：
   - ユーザー発話は実在せず、テンプレート／プロンプトで生成
   - カテゴリ誘導的にならないようにする（例：ニュートラルな質問）
2. AI応答の取得：
   - GPT-4やClaudeなど複数モデルを活用
   - 応答は人手確認済みのものを用いて注釈対象とする
3. 応答内容の整形：
   - 一文応答、複文応答、定型応答など多様性を含める
   - 言語的誤りがある場合は注記（除外せず記録）
